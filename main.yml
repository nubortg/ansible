---
- name: Установка VPN
  hosts: all
  gather_facts: False
#  vars:
#    ansible_ssh_user: ans
#    ansible_ssh_pass: ans
#  vars_prompt:
#    - name: connect_ssh_port
#      prompt: "Укажите SSH порт для подключения"
#      default: "22"
#      private: false



  tasks:
    - name: Пробуем подключиться с ключом за одно соберем факты
      ansible.builtin.setup:
      ignore_unreachable: True
      ignore_errors: True
      register: ping_with_key_result

    - name: Копируем ключи на хост
      block:

        - name: Ввод пароля пользователя
          pause:
            prompt: "Пароль"
            echo: yes
          register: user_password

        - name: Обновляем факты
          set_fact:
            ansible_ssh_pass: "{{ user_password.user_input }}"

        - name: Сбор фактов о системе
          ansible.builtin.setup:

        - name: Добавление ключа на хост Debian
          authorized_key:
            user: root
            key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
            state: present
          when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

        - name: Добавление ключа на хост CentOS
          block:

            - name: Создание директори .ssh в CentOS
              file:
                path: ~/.ssh
                state: directory
                mode: '0700'

            - name: Создаем файл authorized_keys
              lineinfile:
                path: ~/.ssh/authorized_keys
                line: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
                create: yes

            - name: Set correct permissions for authorized_keys
              file:
                path: ~/.ssh/authorized_keys
                mode: '0600'

          when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

      when: ping_with_key_result.unreachable is defined

    - name: Change ssh port query
      pause:
        prompt: "Меняем ssh port? (y/n)"
      register: change_ssh_port_response

    - name: Check user choice
      set_fact:
        change_ssh_port: "{{ change_ssh_port_response.user_input | lower == 'y' }}"
      when: change_ssh_port_response.user_input | lower in ['y', 'n']

    - name: Change SSH port
      block:

        - name: Enter new SSH port
          pause:
            prompt: "Новый SSH порт: "
          register: new_port_response

        - name: Update SSH Port in sshd_config
          lineinfile:
            dest: "/etc/ssh/sshd_config"
            regexp: "^Port"
            line: "Port {{ new_port_response.user_input }}"
          notify: "Restart sshd"

        - name: Меняем порт в inventory
          delegate_to: localhost
          replace:
            path: "{{ inventory_file }}"
            regexp: "(^test.*ansible_port=)\\d+(.*)$"
            replace: "\\g<1>{{ new_port_response.user_input }}\\2"
            #backup: True

      when: change_ssh_port

    - name: Пытаемся обновить систему если она Debian или Ubuntu
      block:

        - name:  Update package cache Debian
          apt:
            update_cache: 'yes'
            cache_valid_time: 3600 # идемпотентненько !!!

        - name: Upgrade packages Debian
          apt:
            upgrade: 'yes'


        - name: Установка Docker
          apt:
            name:
              - docker
              - docker-compose
            state: present  # идемпотентненько !!!

      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

    - name: Аналогично для RHEL
      block:

        - name: Update package cache RHEL
          yum:
            update_cache: 'yes'
            #cache_valid_time: 3600 # НЕ идемпотентненько !!!!!!1111одинодинодин

        - name: Upgrade packages RHEL
          yum:
            name: '*'
            state: latest

        - name: Установка Docker
          apt:
            name:
              - docker
              - docker-compose
            state: present

      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

    - name: Есть наш репо?   # идемпотентненько !!!
      stat:
        path: /root/wgadproxy
      register: repo_directory

    - name: Клонируем наш репо
      ansible.builtin.git:
        repo: https://github.com/nubortg/wgadproxy.git
        dest: /root/wgadproxy
      when: repo_directory


  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted




















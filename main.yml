---
- name: Установка VPN
  hosts: all
  gather_facts: False

  tasks:
    - name: Пробуем подключиться с ключом за одно соберем факты
      ansible.builtin.setup:
      ignore_unreachable: True
      ignore_errors: True
      register: ping_with_key_result

    - name: Копируем ключи на хост
      block:

        - name: Ввод пароля пользователя
          pause:
            prompt: "Пароль"
            echo: yes
          register: user_password

        - name: Обновляем пароль
          set_fact:
            ansible_ssh_pass: "{{ user_password.user_input }}"

        - name: Запрос версии OS
          ansible.builtin.setup:
            filter:
              - 'distribution'

        - name: Проверка операционной системы
          fail:
            msg: "Поддерживаются только Debian и Ubuntu"
          when: not (ansible_facts['distribution'] == 'Debian' or ansible_facts['distribution'] == 'Ubuntu')

        - name: Добавление ключа на хост Debian
          authorized_key:
            user: root
            key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
            state: present

      when: ping_with_key_result.unreachable is defined

    - name: Смена порта SSH
      pause:
        prompt: "Меняем ssh port? (y/n)"
      register: change_ssh_port_response

    - name: Проверка выбора пользователя
      set_fact:
        change_ssh_port: "{{ change_ssh_port_response.user_input | lower == 'y' }}"
      when: change_ssh_port_response.user_input | lower in ['y', 'n']

    - name: Смена порта SSH
      block:

        - name: Запрос нового SSH порта
          pause:
            prompt: "Новый SSH порт: "
          register: new_port_response

        - name:  Обновление SSH в конфиге.
          lineinfile:
            dest: "/etc/ssh/sshd_config"
            regexp: "^Port"
            line: "Port {{ new_port_response.user_input }}"
          notify: "Restart sshd"

        - name: Меняем порт в inventory
          delegate_to: localhost
          replace:
            path: "{{ inventory_file }}"
            regexp: "(^test.*ansible_port=)\\d+(.*)$"
            replace: "\\g<1>{{ new_port_response.user_input }}\\2"
            #backup: True

      when: change_ssh_port

    - name: Пытаемся обновить систему если она Debian или Ubuntu
      block:

        - name: Обновление кеша
          apt:
            update_cache: 'yes'
            cache_valid_time: 3600 # идемпотентненько !!!

        - name: Обновление пакетов
          apt:
            upgrade: 'yes'

        - name: Установка Docker, Docker-Compose, Ufw
          apt:
            name:
              - docker
              - docker-compose
              - ufw
            state: present  # идемпотентненько !!!

    - name: Проверка существования директории   # идемпотентненько !!!
      stat:
        path: /root/wgadproxy
      register: repo_directory

    - name: Клонирование репозитория, если не существует
      ansible.builtin.git:
        repo: https://github.com/nubortg/wgadproxy.git
        dest: /root/wgadproxy
      when: not repo_directory.stat.exists

    - name: Запускаем приложение
      docker_compose:
        project_src: /root/wgadproxy

    - name: Установка прав доступа на файл
      ansible.builtin.file:
        path: /root/wgadproxy/nginx/www/sites.list
        mode: '0644'

    - name: Copy peer1.conf to remote server
      fetch:
        src: /root/wgadproxy/wireguard/peer1/peer1.conf
        dest: "{{ inventory_dir }}/peer1.conf"

    - name: Добавляем правило брандмауэра для нового порта SSH
      ufw:
        rule: allow
        port: "{{ new_port_response.user_input }}"
      when: change_ssh_port

    - name: Удаляем правило брандмауэра для старого порта SSH
      ufw:
        rule: allow
        port: '{{ ansible_port | string }}'
        delete: True
      when: change_ssh_port

    - name: Добавляем правило брандмауэра для порта Wireguard (port 51820)
      ufw:
        rule: allow
        port: '51820'
        proto: udp

    - name: Активация UFW
      ufw:
        state: enabled

  handlers:
    - name: Restart sshd
      service:
        name: sshd
        state: restarted




















---
- name: Установка VPN
  hosts: all
  gather_facts: False
#  vars:
#    ansible_ssh_user: ans
#    ansible_ssh_pass: ans
  vars_prompt:
    - name: connect_ssh_port
      prompt: "Укажите SSH порт для подключения"
      default: "22"
      private: false



  tasks:
    - name: Пробуем подключиться с ключом
      ping:
      ignore_unreachable: True
      ignore_errors: True
      register: ping_with_key_result

    - debug:
        #msg: "Testing ssh_connection_test.stderr"
        var: ping_with_key_result

    - name: Копируем ключи на хост
      block:
        - name: Ввод пароля пользователя
          pause:
            prompt: "Пароль"
            echo: yes
          register: user_password

        - name: Обновляем факты
          set_fact:
            ansible_ssh_pass: "{{ user_password.user_input }}"

        - debug:
            var: user_password.user_input

        - name: Добавление ключа на хост
          authorized_key:
            user: root
            key: "{{ lookup('file', '/root/.ssh/id_rsa.pub') }}"
            state: present


      when: ping_with_key_result.unreachable is defined

    - name: Change ssh port query A
      pause:
        prompt: "Меняем ssh port? (y/n)"
      register: change_ssh_port_response 

    - name: Check user choice B
      set_fact:
        change_ssh_port: "{{ change_ssh_port_response.user_input | lower == 'y' }}"
      when: change_ssh_port_response.user_input | lower in ['y', 'n']

    - debug:
        #msg: "{{ ansible_port }} and {{ change_ssh_port_response.user_input }}"
      when: change_ssh_port

    - name: Change SSH port
      block:

        - name: Enter new SSH port
          pause:
            prompt: "Новый SSH порт: "
          register: new_port_response


        - name: Меняем порт в inventory
          delegate_to: localhost
          lineinfile:
            path: "{{ inventory_file }}"
            regexp: "^({{ inventory_hostname }} ansible_host=.*)( ansible_port=\d+)?( ansible_user=root)?$"
            line: "\1 ansible_port={{ new_port_response }}\3"
      
      when: change_ssh_port and current_port_response.user_input == hostvars[inventory_hostname][ssh_port_variable]





        - debug:
            msg: "{{ inventory_file }} и {{ inventory_hostname }} и {{ ansible_port }}"

      when: change_ssh_port
































